#ifndef FUNCTIONS_H
#define FUNCTIONS_H

#define _USE_MATH_DEFINES
#include "histogram.h"
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/core/core.hpp>
#include <vector>
#include <cmath>
#include <limits>


class imageFunctions
{
private:
    double max, min;
	Histogram h;
	cv::MatND hist;
	cv::Point minIndex, maxIndex;
	cv::Mat elementOpen;
	cv::Mat elementClose;
    
public:
    imageFunctions();

	~imageFunctions();
    
    double  round(double x);
    
    void    getROI(const cv::Mat &src);
    
    void    getAngles(const cv::Mat &src, const std::vector<cv::Point2f> &MassCenter, std::vector<cv::Vec3d> &AngleData);
    
    void    getMotorData(const std::vector<cv::Vec3d> &AngleData, const std::vector<cv::Vec2d> &AngleDataBefore, std::vector<cv::Vec2d> &AngleDataAfter, std::vector<cv::Vec2i> &MotorData);
};

#endif // FUNCTIONS_H

